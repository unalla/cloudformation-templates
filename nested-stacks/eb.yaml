AWSTemplateFormatVersion: '2010-09-09'
Description: Elastic Beanstalk Nested stack
Parameters:
  ApplicationName:
    Type: String
    Description: Enter the name of your application with no spaces.
  Platform:
    Type: String
    AllowedValues:
      - dotnet
      - node
      - python
    ConstraintDescription: Must pick between dotnet, node, or python for your Application platform.
  VPCId:
    Type: AWS::EC2::VPC::Id
  SubnetA:
    Type: AWS::EC2::Subnet::Id
  SubnetB:
    Type: AWS::EC2::Subnet::Id

Mappings:
  EBPlatformMap:
    dotnet:
      version: dotnet-v4
      SolutionStackName: 64bit Windows Server 2019 v2.5.2 running IIS 10.0
    node:
      version: node-v12
      SolutionStackName: 64bit Amazon Linux 2 v5.0.1 running Node.js 12
    python:
      version: python-v3
      SolutionStackName: 64bit Amazon Linux 2 v3.0.0 running Python 3.7

Resources:
  EBApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName:
        !Join
          - ''
          - - !Ref ApplicationName
            - '-web'
      Description: "Web interface for the Application"

  EBEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref EBApplication
      EnvironmentName:
        !Join
          - ''
          - - !Ref ApplicationName
            - '-web-env-'
            - !FindInMap [EBPlatformMap, !Ref Platform, version]
      SolutionStackName:
        !FindInMap
          - EBPlatformMap
          - !Ref Platform
          - SolutionStackName
      OptionSettings:
        - Namespace: aws:ec2:vpc
          OptionName: VPCId
          Value: !Ref VPCId
        - Namespace: aws:ec2:vpc
          OptionName: Subnets
          Value: !Sub ${SubnetA}, ${SubnetB}
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: SingleInstance
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: ServiceRole
          Value: !Ref ServiceRole
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref InstanceProfile

  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: 'elasticbeanstalk.amazonaws.com'
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': elasticbeanstalk
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService
        - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth
      Path: /

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref InstanceProfileRole
  InstanceProfileRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
      Path: /